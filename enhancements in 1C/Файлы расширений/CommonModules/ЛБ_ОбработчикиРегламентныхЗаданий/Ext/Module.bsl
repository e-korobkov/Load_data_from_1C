Процедура ДобавитьРегламентноеЗадание() Экспорт
	
	КлючРегламентногоЗадания 	= "ЛБ_ОбработчикиРегламентныхЗаданий.ЛБ_ОбработатьОбъектыВФоне";
	
	РезультатПоиска 			= РегламентныеЗаданияСервер.НайтиЗадания(Новый Структура("Ключ", КлючРегламентногоЗадания));
    
    Если РезультатПоиска.Количество() = 0 Тогда
		
		РЗ 										= РегламентныеЗадания.СоздатьРегламентноеЗадание("ЗапускДополнительныхОбработок");
        РЗ.Наименование  						= "ЛБ: Заполнение гуидов";
        РЗ.Ключ            						= КлючРегламентногоЗадания;
        РЗ.Использование 						= Истина;
		
		РЗ.Расписание.ДатаНачала 				= ТекущаяДата();    //начиная с текущей даты
        РЗ.Расписание.ПериодПовтораДней    		= 1;   				//каждый день
		РЗ.Расписание.ПериодПовтораВТечениеДня  = 5;				//каждый час
        
        РЗ.Параметры.Добавить(Справочники.ДополнительныеОтчетыИОбработки.ПустаяСсылка());
        РЗ.Параметры.Добавить(КлючРегламентногоЗадания);
        РЗ.Записать();
		
    КонецЕсли;
КонецПроцедуры

//регламентное задание - обработка объектов
Функция ЛБ_ОбработатьОбъектыВФоне(АдресРезультата = Неопределено) Экспорт 
	
	возврат Неопределено; 
	
	Отказ 			= Ложь;
    ТекстОшибки 	= ""; 
    
    ОбработатьОбъектыРасширения(Отказ, ТекстОшибки); //вызываем процедуру обработки
    
    Если Не ПустаяСтрока(ТекстОшибки) Тогда
        ЗаписьЖурналаРегистрации(
            "Лб: Ошибка сохранения гуида объекта", УровеньЖурналаРегистрации.Ошибка,,,ТекстОшибки);
    КонецЕсли;
    
    Результат = Новый Структура("Успешно, ТекстОшибки", Не Отказ, ТекстОшибки);
	
    Если АдресРезультата <> Неопределено Тогда
        ПоместитьВоВременноеХранилище(Результат, АдресРезультата);
    КонецЕсли;
    
    Возврат Результат;
КонецФункции

&НаСервере
Процедура ЗаполнитьДанныеОбъекта(Ссылка)
	
	ИзменяемыйОбъект 							= Ссылка.ПолучитьОбъект();
	
	ВыполнитьМодификациюОбъекта 				= Истина;
	
	Попытка
	  	ИзменяемыйОбъект.Заблокировать();
	Исключение
	  	ВыполнитьМодификациюОбъекта 				= Ложь;
	КонецПопытки;
	
	Если ВыполнитьМодификациюОбъекта = Истина Тогда
		
		ИзменяемыйОбъект.ОбменДанными.Загрузка 		= Истина;
		ИзменяемыйОбъект.ЛБ_Гуид 					= Строка(Ссылка.УникальныйИдентификатор());
		ИзменяемыйОбъект.ЛБ_ДатаИзменения 			= ТекущаяДата();
		ИзменяемыйОбъект.Записать();
		
	КонецЕсли;

КонецПроцедуры


Процедура ОбработатьОбъектыРасширения(Отказ, ТекстОшибки)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Номенклатура.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.Номенклатура КАК Номенклатура
		|ГДЕ
		|	Номенклатура.ЛБ_Гуид = ""00000000-0000-0000-0000-000000000000""
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	Партнеры.Ссылка
		|ИЗ
		|	Справочник.Партнеры КАК Партнеры
		|ГДЕ
		|	Партнеры.ЛБ_Гуид = ""00000000-0000-0000-0000-000000000000""
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ВидыЦен.Ссылка
		|ИЗ
		|	Справочник.ВидыЦен КАК ВидыЦен
		|ГДЕ
		|	ВидыЦен.ЛБ_Гуид = ""00000000-0000-0000-0000-000000000000""
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ПричиныОтменыЗаказовКлиентов.Ссылка
		|ИЗ
		|	Справочник.ПричиныОтменыЗаказовКлиентов КАК ПричиныОтменыЗаказовКлиентов
		|ГДЕ
		|	ПричиныОтменыЗаказовКлиентов.ЛБ_Гуид = ""00000000-0000-0000-0000-000000000000""
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	БизнесРегионы.Ссылка
		|ИЗ
		|	Справочник.БизнесРегионы КАК БизнесРегионы
		|ГДЕ
		|	БизнесРегионы.ЛБ_Гуид = ""00000000-0000-0000-0000-000000000000""
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	СегментыНоменклатуры.Ссылка
		|ИЗ
		|	Справочник.СегментыНоменклатуры КАК СегментыНоменклатуры
		|ГДЕ
		|	СегментыНоменклатуры.ЛБ_Гуид = ""00000000-0000-0000-0000-000000000000""
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	РегистрацияЦенНоменклатурыПоставщикаПрисоединенныеФайлы.Ссылка
		|ИЗ
		|	Справочник.РегистрацияЦенНоменклатурыПоставщикаПрисоединенныеФайлы КАК РегистрацияЦенНоменклатурыПоставщикаПрисоединенныеФайлы
		|ГДЕ
		|	РегистрацияЦенНоменклатурыПоставщикаПрисоединенныеФайлы.ЛБ_Гуид = ""00000000-0000-0000-0000-000000000000""
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	АктВыполненныхРабот.Ссылка
		|ИЗ
		|	Документ.АктВыполненныхРабот КАК АктВыполненныхРабот
		|ГДЕ
		|	АктВыполненныхРабот.ЛБ_Гуид = ""00000000-0000-0000-0000-000000000000""
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ОтчетОРозничныхПродажах.Ссылка
		|ИЗ
		|	Документ.ОтчетОРозничныхПродажах КАК ОтчетОРозничныхПродажах
		|ГДЕ
		|	ОтчетОРозничныхПродажах.ЛБ_Гуид = ""00000000-0000-0000-0000-000000000000""
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ЧекККМ.Ссылка
		|ИЗ
		|	Документ.ЧекККМ КАК ЧекККМ
		|ГДЕ
		|	ЧекККМ.ЛБ_Гуид = ""00000000-0000-0000-0000-000000000000""
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ВозвратТоваровОтКлиента.Ссылка
		|ИЗ
		|	Документ.ВозвратТоваровОтКлиента КАК ВозвратТоваровОтКлиента
		|ГДЕ
		|	ВозвратТоваровОтКлиента.ЛБ_Гуид = ""00000000-0000-0000-0000-000000000000""
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	РеализацияТоваровУслуг.Ссылка
		|ИЗ
		|	Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
		|ГДЕ
		|	РеализацияТоваровУслуг.ЛБ_Гуид = ""00000000-0000-0000-0000-000000000000""
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ЗаказКлиента.Ссылка
		|ИЗ
		|	Документ.ЗаказКлиента КАК ЗаказКлиента
		|ГДЕ
		|	ЗаказКлиента.ЛБ_Гуид = ""00000000-0000-0000-0000-000000000000""
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	СчетНаОплатуКлиенту.Ссылка
		|ИЗ
		|	Документ.СчетНаОплатуКлиенту КАК СчетНаОплатуКлиенту
		|ГДЕ
		|	СчетНаОплатуКлиенту.ЛБ_Гуид = ""00000000-0000-0000-0000-000000000000""
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ПоступлениеБезналичныхДенежныхСредств.Ссылка
		|ИЗ
		|	Документ.ПоступлениеБезналичныхДенежныхСредств КАК ПоступлениеБезналичныхДенежныхСредств
		|ГДЕ
		|	ПоступлениеБезналичныхДенежныхСредств.ЛБ_Гуид = ""00000000-0000-0000-0000-000000000000""
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	СписаниеБезналичныхДенежныхСредств.Ссылка
		|ИЗ
		|	Документ.СписаниеБезналичныхДенежныхСредств КАК СписаниеБезналичныхДенежныхСредств
		|ГДЕ
		|	СписаниеБезналичныхДенежныхСредств.ЛБ_Гуид = ""00000000-0000-0000-0000-000000000000""
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	УстановкаЦенНоменклатуры.Ссылка
		|ИЗ
		|	Документ.УстановкаЦенНоменклатуры КАК УстановкаЦенНоменклатуры
		|ГДЕ
		|	УстановкаЦенНоменклатуры.ЛБ_Гуид = ""00000000-0000-0000-0000-000000000000""
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	КассоваяСмена.Ссылка
		|ИЗ
		|	Документ.КассоваяСмена КАК КассоваяСмена
		|ГДЕ
		|	КассоваяСмена.ЛБ_Гуид = ""00000000-0000-0000-0000-000000000000""
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	РегистрацияЦенНоменклатурыПоставщика.Ссылка
		|ИЗ
		|	Документ.РегистрацияЦенНоменклатурыПоставщика КАК РегистрацияЦенНоменклатурыПоставщика
		|ГДЕ
		|	РегистрацияЦенНоменклатурыПоставщика.ЛБ_Гуид = ""00000000-0000-0000-0000-000000000000""
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ВидыНоменклатуры.Ссылка
		|ИЗ
		|	Справочник.ВидыНоменклатуры КАК ВидыНоменклатуры
		|ГДЕ
		|	ВидыНоменклатуры.ЛБ_Гуид = ""00000000-0000-0000-0000-000000000000""
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ДополнительныеРеквизитыИСведения.Ссылка
		|ИЗ
		|	ПланВидовХарактеристик.ДополнительныеРеквизитыИСведения КАК ДополнительныеРеквизитыИСведения
		|ГДЕ
		|	ДополнительныеРеквизитыИСведения.ЛБ_Гуид = ""00000000-0000-0000-0000-000000000000""
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ЗначенияСвойствОбъектов.Ссылка
		|ИЗ
		|	Справочник.ЗначенияСвойствОбъектов КАК ЗначенияСвойствОбъектов
		|ГДЕ
		|	ЗначенияСвойствОбъектов.ЛБ_Гуид = ""00000000-0000-0000-0000-000000000000""";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		ЗаполнитьДанныеОбъекта(Выборка.Ссылка);
	КонецЦикла;
	
КонецПроцедуры